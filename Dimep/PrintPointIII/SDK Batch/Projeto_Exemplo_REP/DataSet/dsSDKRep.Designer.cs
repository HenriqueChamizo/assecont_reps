//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ExemploREP.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSDKREP")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSDKREP : global::System.Data.DataSet {
        
        private dtHistoricoComandosDataTable tabledtHistoricoComandos;
        
        private dtMensagensDisplayDataTable tabledtMensagensDisplay;
        
        private dtFuncionariosDataTable tabledtFuncionarios;
        
        private dtCredenciaisDataTable tabledtCredenciais;
        
        private dtTemplatesRecebidoDataTable tabledtTemplatesRecebido;
        
        private dtSupervisoresDataTable tabledtSupervisores;
        
        private dtMRPAlteracaoEmpregadorDataTable tabledtMRPAlteracaoEmpregador;
        
        private dtMRPMarcacaoDataTable tabledtMRPMarcacao;
        
        private dtMRPDataHoraDataTable tabledtMRPDataHora;
        
        private dtMRPEmpregadoDataTable tabledtMRPEmpregado;
        
        private dtStatusDataTable tabledtStatus;
        
        private dtTemplatesParaEnvioDataTable tabledtTemplatesParaEnvio;
        
        private dtEventosDataTable tabledtEventos;
        
        private dtMRPEventosSensiveisDataTable tabledtMRPEventosSensiveis;
        
        private dtFuncionariosCompletosDataTable tabledtFuncionariosCompletos;
        
        private dtEventosSistemaDataTable tabledtEventosSistema;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsSDKREP() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsSDKREP(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtHistoricoComandos"] != null)) {
                    base.Tables.Add(new dtHistoricoComandosDataTable(ds.Tables["dtHistoricoComandos"]));
                }
                if ((ds.Tables["dtMensagensDisplay"] != null)) {
                    base.Tables.Add(new dtMensagensDisplayDataTable(ds.Tables["dtMensagensDisplay"]));
                }
                if ((ds.Tables["dtFuncionarios"] != null)) {
                    base.Tables.Add(new dtFuncionariosDataTable(ds.Tables["dtFuncionarios"]));
                }
                if ((ds.Tables["dtCredenciais"] != null)) {
                    base.Tables.Add(new dtCredenciaisDataTable(ds.Tables["dtCredenciais"]));
                }
                if ((ds.Tables["dtTemplatesRecebido"] != null)) {
                    base.Tables.Add(new dtTemplatesRecebidoDataTable(ds.Tables["dtTemplatesRecebido"]));
                }
                if ((ds.Tables["dtSupervisores"] != null)) {
                    base.Tables.Add(new dtSupervisoresDataTable(ds.Tables["dtSupervisores"]));
                }
                if ((ds.Tables["dtMRPAlteracaoEmpregador"] != null)) {
                    base.Tables.Add(new dtMRPAlteracaoEmpregadorDataTable(ds.Tables["dtMRPAlteracaoEmpregador"]));
                }
                if ((ds.Tables["dtMRPMarcacao"] != null)) {
                    base.Tables.Add(new dtMRPMarcacaoDataTable(ds.Tables["dtMRPMarcacao"]));
                }
                if ((ds.Tables["dtMRPDataHora"] != null)) {
                    base.Tables.Add(new dtMRPDataHoraDataTable(ds.Tables["dtMRPDataHora"]));
                }
                if ((ds.Tables["dtMRPEmpregado"] != null)) {
                    base.Tables.Add(new dtMRPEmpregadoDataTable(ds.Tables["dtMRPEmpregado"]));
                }
                if ((ds.Tables["dtStatus"] != null)) {
                    base.Tables.Add(new dtStatusDataTable(ds.Tables["dtStatus"]));
                }
                if ((ds.Tables["dtTemplatesParaEnvio"] != null)) {
                    base.Tables.Add(new dtTemplatesParaEnvioDataTable(ds.Tables["dtTemplatesParaEnvio"]));
                }
                if ((ds.Tables["dtEventos"] != null)) {
                    base.Tables.Add(new dtEventosDataTable(ds.Tables["dtEventos"]));
                }
                if ((ds.Tables["dtMRPEventosSensiveis"] != null)) {
                    base.Tables.Add(new dtMRPEventosSensiveisDataTable(ds.Tables["dtMRPEventosSensiveis"]));
                }
                if ((ds.Tables["dtFuncionariosCompletos"] != null)) {
                    base.Tables.Add(new dtFuncionariosCompletosDataTable(ds.Tables["dtFuncionariosCompletos"]));
                }
                if ((ds.Tables["dtEventosSistema"] != null)) {
                    base.Tables.Add(new dtEventosSistemaDataTable(ds.Tables["dtEventosSistema"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtHistoricoComandosDataTable dtHistoricoComandos {
            get {
                return this.tabledtHistoricoComandos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMensagensDisplayDataTable dtMensagensDisplay {
            get {
                return this.tabledtMensagensDisplay;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtFuncionariosDataTable dtFuncionarios {
            get {
                return this.tabledtFuncionarios;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCredenciaisDataTable dtCredenciais {
            get {
                return this.tabledtCredenciais;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtTemplatesRecebidoDataTable dtTemplatesRecebido {
            get {
                return this.tabledtTemplatesRecebido;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSupervisoresDataTable dtSupervisores {
            get {
                return this.tabledtSupervisores;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMRPAlteracaoEmpregadorDataTable dtMRPAlteracaoEmpregador {
            get {
                return this.tabledtMRPAlteracaoEmpregador;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMRPMarcacaoDataTable dtMRPMarcacao {
            get {
                return this.tabledtMRPMarcacao;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMRPDataHoraDataTable dtMRPDataHora {
            get {
                return this.tabledtMRPDataHora;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMRPEmpregadoDataTable dtMRPEmpregado {
            get {
                return this.tabledtMRPEmpregado;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtStatusDataTable dtStatus {
            get {
                return this.tabledtStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtTemplatesParaEnvioDataTable dtTemplatesParaEnvio {
            get {
                return this.tabledtTemplatesParaEnvio;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtEventosDataTable dtEventos {
            get {
                return this.tabledtEventos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMRPEventosSensiveisDataTable dtMRPEventosSensiveis {
            get {
                return this.tabledtMRPEventosSensiveis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtFuncionariosCompletosDataTable dtFuncionariosCompletos {
            get {
                return this.tabledtFuncionariosCompletos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtEventosSistemaDataTable dtEventosSistema {
            get {
                return this.tabledtEventosSistema;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsSDKREP cln = ((dsSDKREP)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtHistoricoComandos"] != null)) {
                    base.Tables.Add(new dtHistoricoComandosDataTable(ds.Tables["dtHistoricoComandos"]));
                }
                if ((ds.Tables["dtMensagensDisplay"] != null)) {
                    base.Tables.Add(new dtMensagensDisplayDataTable(ds.Tables["dtMensagensDisplay"]));
                }
                if ((ds.Tables["dtFuncionarios"] != null)) {
                    base.Tables.Add(new dtFuncionariosDataTable(ds.Tables["dtFuncionarios"]));
                }
                if ((ds.Tables["dtCredenciais"] != null)) {
                    base.Tables.Add(new dtCredenciaisDataTable(ds.Tables["dtCredenciais"]));
                }
                if ((ds.Tables["dtTemplatesRecebido"] != null)) {
                    base.Tables.Add(new dtTemplatesRecebidoDataTable(ds.Tables["dtTemplatesRecebido"]));
                }
                if ((ds.Tables["dtSupervisores"] != null)) {
                    base.Tables.Add(new dtSupervisoresDataTable(ds.Tables["dtSupervisores"]));
                }
                if ((ds.Tables["dtMRPAlteracaoEmpregador"] != null)) {
                    base.Tables.Add(new dtMRPAlteracaoEmpregadorDataTable(ds.Tables["dtMRPAlteracaoEmpregador"]));
                }
                if ((ds.Tables["dtMRPMarcacao"] != null)) {
                    base.Tables.Add(new dtMRPMarcacaoDataTable(ds.Tables["dtMRPMarcacao"]));
                }
                if ((ds.Tables["dtMRPDataHora"] != null)) {
                    base.Tables.Add(new dtMRPDataHoraDataTable(ds.Tables["dtMRPDataHora"]));
                }
                if ((ds.Tables["dtMRPEmpregado"] != null)) {
                    base.Tables.Add(new dtMRPEmpregadoDataTable(ds.Tables["dtMRPEmpregado"]));
                }
                if ((ds.Tables["dtStatus"] != null)) {
                    base.Tables.Add(new dtStatusDataTable(ds.Tables["dtStatus"]));
                }
                if ((ds.Tables["dtTemplatesParaEnvio"] != null)) {
                    base.Tables.Add(new dtTemplatesParaEnvioDataTable(ds.Tables["dtTemplatesParaEnvio"]));
                }
                if ((ds.Tables["dtEventos"] != null)) {
                    base.Tables.Add(new dtEventosDataTable(ds.Tables["dtEventos"]));
                }
                if ((ds.Tables["dtMRPEventosSensiveis"] != null)) {
                    base.Tables.Add(new dtMRPEventosSensiveisDataTable(ds.Tables["dtMRPEventosSensiveis"]));
                }
                if ((ds.Tables["dtFuncionariosCompletos"] != null)) {
                    base.Tables.Add(new dtFuncionariosCompletosDataTable(ds.Tables["dtFuncionariosCompletos"]));
                }
                if ((ds.Tables["dtEventosSistema"] != null)) {
                    base.Tables.Add(new dtEventosSistemaDataTable(ds.Tables["dtEventosSistema"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtHistoricoComandos = ((dtHistoricoComandosDataTable)(base.Tables["dtHistoricoComandos"]));
            if ((initTable == true)) {
                if ((this.tabledtHistoricoComandos != null)) {
                    this.tabledtHistoricoComandos.InitVars();
                }
            }
            this.tabledtMensagensDisplay = ((dtMensagensDisplayDataTable)(base.Tables["dtMensagensDisplay"]));
            if ((initTable == true)) {
                if ((this.tabledtMensagensDisplay != null)) {
                    this.tabledtMensagensDisplay.InitVars();
                }
            }
            this.tabledtFuncionarios = ((dtFuncionariosDataTable)(base.Tables["dtFuncionarios"]));
            if ((initTable == true)) {
                if ((this.tabledtFuncionarios != null)) {
                    this.tabledtFuncionarios.InitVars();
                }
            }
            this.tabledtCredenciais = ((dtCredenciaisDataTable)(base.Tables["dtCredenciais"]));
            if ((initTable == true)) {
                if ((this.tabledtCredenciais != null)) {
                    this.tabledtCredenciais.InitVars();
                }
            }
            this.tabledtTemplatesRecebido = ((dtTemplatesRecebidoDataTable)(base.Tables["dtTemplatesRecebido"]));
            if ((initTable == true)) {
                if ((this.tabledtTemplatesRecebido != null)) {
                    this.tabledtTemplatesRecebido.InitVars();
                }
            }
            this.tabledtSupervisores = ((dtSupervisoresDataTable)(base.Tables["dtSupervisores"]));
            if ((initTable == true)) {
                if ((this.tabledtSupervisores != null)) {
                    this.tabledtSupervisores.InitVars();
                }
            }
            this.tabledtMRPAlteracaoEmpregador = ((dtMRPAlteracaoEmpregadorDataTable)(base.Tables["dtMRPAlteracaoEmpregador"]));
            if ((initTable == true)) {
                if ((this.tabledtMRPAlteracaoEmpregador != null)) {
                    this.tabledtMRPAlteracaoEmpregador.InitVars();
                }
            }
            this.tabledtMRPMarcacao = ((dtMRPMarcacaoDataTable)(base.Tables["dtMRPMarcacao"]));
            if ((initTable == true)) {
                if ((this.tabledtMRPMarcacao != null)) {
                    this.tabledtMRPMarcacao.InitVars();
                }
            }
            this.tabledtMRPDataHora = ((dtMRPDataHoraDataTable)(base.Tables["dtMRPDataHora"]));
            if ((initTable == true)) {
                if ((this.tabledtMRPDataHora != null)) {
                    this.tabledtMRPDataHora.InitVars();
                }
            }
            this.tabledtMRPEmpregado = ((dtMRPEmpregadoDataTable)(base.Tables["dtMRPEmpregado"]));
            if ((initTable == true)) {
                if ((this.tabledtMRPEmpregado != null)) {
                    this.tabledtMRPEmpregado.InitVars();
                }
            }
            this.tabledtStatus = ((dtStatusDataTable)(base.Tables["dtStatus"]));
            if ((initTable == true)) {
                if ((this.tabledtStatus != null)) {
                    this.tabledtStatus.InitVars();
                }
            }
            this.tabledtTemplatesParaEnvio = ((dtTemplatesParaEnvioDataTable)(base.Tables["dtTemplatesParaEnvio"]));
            if ((initTable == true)) {
                if ((this.tabledtTemplatesParaEnvio != null)) {
                    this.tabledtTemplatesParaEnvio.InitVars();
                }
            }
            this.tabledtEventos = ((dtEventosDataTable)(base.Tables["dtEventos"]));
            if ((initTable == true)) {
                if ((this.tabledtEventos != null)) {
                    this.tabledtEventos.InitVars();
                }
            }
            this.tabledtMRPEventosSensiveis = ((dtMRPEventosSensiveisDataTable)(base.Tables["dtMRPEventosSensiveis"]));
            if ((initTable == true)) {
                if ((this.tabledtMRPEventosSensiveis != null)) {
                    this.tabledtMRPEventosSensiveis.InitVars();
                }
            }
            this.tabledtFuncionariosCompletos = ((dtFuncionariosCompletosDataTable)(base.Tables["dtFuncionariosCompletos"]));
            if ((initTable == true)) {
                if ((this.tabledtFuncionariosCompletos != null)) {
                    this.tabledtFuncionariosCompletos.InitVars();
                }
            }
            this.tabledtEventosSistema = ((dtEventosSistemaDataTable)(base.Tables["dtEventosSistema"]));
            if ((initTable == true)) {
                if ((this.tabledtEventosSistema != null)) {
                    this.tabledtEventosSistema.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsSDKREP";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSDKREP.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtHistoricoComandos = new dtHistoricoComandosDataTable();
            base.Tables.Add(this.tabledtHistoricoComandos);
            this.tabledtMensagensDisplay = new dtMensagensDisplayDataTable();
            base.Tables.Add(this.tabledtMensagensDisplay);
            this.tabledtFuncionarios = new dtFuncionariosDataTable();
            base.Tables.Add(this.tabledtFuncionarios);
            this.tabledtCredenciais = new dtCredenciaisDataTable();
            base.Tables.Add(this.tabledtCredenciais);
            this.tabledtTemplatesRecebido = new dtTemplatesRecebidoDataTable();
            base.Tables.Add(this.tabledtTemplatesRecebido);
            this.tabledtSupervisores = new dtSupervisoresDataTable();
            base.Tables.Add(this.tabledtSupervisores);
            this.tabledtMRPAlteracaoEmpregador = new dtMRPAlteracaoEmpregadorDataTable();
            base.Tables.Add(this.tabledtMRPAlteracaoEmpregador);
            this.tabledtMRPMarcacao = new dtMRPMarcacaoDataTable();
            base.Tables.Add(this.tabledtMRPMarcacao);
            this.tabledtMRPDataHora = new dtMRPDataHoraDataTable();
            base.Tables.Add(this.tabledtMRPDataHora);
            this.tabledtMRPEmpregado = new dtMRPEmpregadoDataTable();
            base.Tables.Add(this.tabledtMRPEmpregado);
            this.tabledtStatus = new dtStatusDataTable();
            base.Tables.Add(this.tabledtStatus);
            this.tabledtTemplatesParaEnvio = new dtTemplatesParaEnvioDataTable();
            base.Tables.Add(this.tabledtTemplatesParaEnvio);
            this.tabledtEventos = new dtEventosDataTable();
            base.Tables.Add(this.tabledtEventos);
            this.tabledtMRPEventosSensiveis = new dtMRPEventosSensiveisDataTable();
            base.Tables.Add(this.tabledtMRPEventosSensiveis);
            this.tabledtFuncionariosCompletos = new dtFuncionariosCompletosDataTable();
            base.Tables.Add(this.tabledtFuncionariosCompletos);
            this.tabledtEventosSistema = new dtEventosSistemaDataTable();
            base.Tables.Add(this.tabledtEventosSistema);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtHistoricoComandos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMensagensDisplay() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtFuncionarios() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCredenciais() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtTemplatesRecebido() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSupervisores() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMRPAlteracaoEmpregador() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMRPMarcacao() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMRPDataHora() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMRPEmpregado() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtTemplatesParaEnvio() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtEventos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMRPEventosSensiveis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtFuncionariosCompletos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtEventosSistema() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSDKREP ds = new dsSDKREP();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtHistoricoComandosRowChangeEventHandler(object sender, dtHistoricoComandosRowChangeEvent e);
        
        public delegate void dtMensagensDisplayRowChangeEventHandler(object sender, dtMensagensDisplayRowChangeEvent e);
        
        public delegate void dtFuncionariosRowChangeEventHandler(object sender, dtFuncionariosRowChangeEvent e);
        
        public delegate void dtCredenciaisRowChangeEventHandler(object sender, dtCredenciaisRowChangeEvent e);
        
        public delegate void dtTemplatesRecebidoRowChangeEventHandler(object sender, dtTemplatesRecebidoRowChangeEvent e);
        
        public delegate void dtSupervisoresRowChangeEventHandler(object sender, dtSupervisoresRowChangeEvent e);
        
        public delegate void dtMRPAlteracaoEmpregadorRowChangeEventHandler(object sender, dtMRPAlteracaoEmpregadorRowChangeEvent e);
        
        public delegate void dtMRPMarcacaoRowChangeEventHandler(object sender, dtMRPMarcacaoRowChangeEvent e);
        
        public delegate void dtMRPDataHoraRowChangeEventHandler(object sender, dtMRPDataHoraRowChangeEvent e);
        
        public delegate void dtMRPEmpregadoRowChangeEventHandler(object sender, dtMRPEmpregadoRowChangeEvent e);
        
        public delegate void dtStatusRowChangeEventHandler(object sender, dtStatusRowChangeEvent e);
        
        public delegate void dtTemplatesParaEnvioRowChangeEventHandler(object sender, dtTemplatesParaEnvioRowChangeEvent e);
        
        public delegate void dtEventosRowChangeEventHandler(object sender, dtEventosRowChangeEvent e);
        
        public delegate void dtMRPEventosSensiveisRowChangeEventHandler(object sender, dtMRPEventosSensiveisRowChangeEvent e);
        
        public delegate void dtFuncionariosCompletosRowChangeEventHandler(object sender, dtFuncionariosCompletosRowChangeEvent e);
        
        public delegate void dtEventosSistemaRowChangeEventHandler(object sender, dtEventosSistemaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtHistoricoComandosDataTable : global::System.Data.TypedTableBase<dtHistoricoComandosRow> {
            
            private global::System.Data.DataColumn columnDataHora;
            
            private global::System.Data.DataColumn columnComando;
            
            private global::System.Data.DataColumn columnDescricao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHistoricoComandosDataTable() {
                this.TableName = "dtHistoricoComandos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtHistoricoComandosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtHistoricoComandosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraColumn {
                get {
                    return this.columnDataHora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComandoColumn {
                get {
                    return this.columnComando;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescricaoColumn {
                get {
                    return this.columnDescricao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHistoricoComandosRow this[int index] {
                get {
                    return ((dtHistoricoComandosRow)(this.Rows[index]));
                }
            }
            
            public event dtHistoricoComandosRowChangeEventHandler dtHistoricoComandosRowChanging;
            
            public event dtHistoricoComandosRowChangeEventHandler dtHistoricoComandosRowChanged;
            
            public event dtHistoricoComandosRowChangeEventHandler dtHistoricoComandosRowDeleting;
            
            public event dtHistoricoComandosRowChangeEventHandler dtHistoricoComandosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtHistoricoComandosRow(dtHistoricoComandosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHistoricoComandosRow AdddtHistoricoComandosRow(string DataHora, string Comando, string Descricao) {
                dtHistoricoComandosRow rowdtHistoricoComandosRow = ((dtHistoricoComandosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DataHora,
                        Comando,
                        Descricao};
                rowdtHistoricoComandosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtHistoricoComandosRow);
                return rowdtHistoricoComandosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtHistoricoComandosDataTable cln = ((dtHistoricoComandosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtHistoricoComandosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDataHora = base.Columns["DataHora"];
                this.columnComando = base.Columns["Comando"];
                this.columnDescricao = base.Columns["Descricao"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDataHora = new global::System.Data.DataColumn("DataHora", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHora);
                this.columnComando = new global::System.Data.DataColumn("Comando", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComando);
                this.columnDescricao = new global::System.Data.DataColumn("Descricao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescricao);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHistoricoComandosRow NewdtHistoricoComandosRow() {
                return ((dtHistoricoComandosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtHistoricoComandosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtHistoricoComandosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtHistoricoComandosRowChanged != null)) {
                    this.dtHistoricoComandosRowChanged(this, new dtHistoricoComandosRowChangeEvent(((dtHistoricoComandosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtHistoricoComandosRowChanging != null)) {
                    this.dtHistoricoComandosRowChanging(this, new dtHistoricoComandosRowChangeEvent(((dtHistoricoComandosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtHistoricoComandosRowDeleted != null)) {
                    this.dtHistoricoComandosRowDeleted(this, new dtHistoricoComandosRowChangeEvent(((dtHistoricoComandosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtHistoricoComandosRowDeleting != null)) {
                    this.dtHistoricoComandosRowDeleting(this, new dtHistoricoComandosRowChangeEvent(((dtHistoricoComandosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtHistoricoComandosRow(dtHistoricoComandosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtHistoricoComandosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMensagensDisplayDataTable : global::System.Data.TypedTableBase<dtMensagensDisplayRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnMensagem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMensagensDisplayDataTable() {
                this.TableName = "dtMensagensDisplay";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMensagensDisplayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMensagensDisplayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MensagemColumn {
                get {
                    return this.columnMensagem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMensagensDisplayRow this[int index] {
                get {
                    return ((dtMensagensDisplayRow)(this.Rows[index]));
                }
            }
            
            public event dtMensagensDisplayRowChangeEventHandler dtMensagensDisplayRowChanging;
            
            public event dtMensagensDisplayRowChangeEventHandler dtMensagensDisplayRowChanged;
            
            public event dtMensagensDisplayRowChangeEventHandler dtMensagensDisplayRowDeleting;
            
            public event dtMensagensDisplayRowChangeEventHandler dtMensagensDisplayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMensagensDisplayRow(dtMensagensDisplayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMensagensDisplayRow AdddtMensagensDisplayRow(int Codigo, string Mensagem) {
                dtMensagensDisplayRow rowdtMensagensDisplayRow = ((dtMensagensDisplayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Codigo,
                        Mensagem};
                rowdtMensagensDisplayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMensagensDisplayRow);
                return rowdtMensagensDisplayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMensagensDisplayDataTable cln = ((dtMensagensDisplayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMensagensDisplayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnMensagem = base.Columns["Mensagem"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnMensagem = new global::System.Data.DataColumn("Mensagem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMensagem);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMensagensDisplayRow NewdtMensagensDisplayRow() {
                return ((dtMensagensDisplayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMensagensDisplayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMensagensDisplayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMensagensDisplayRowChanged != null)) {
                    this.dtMensagensDisplayRowChanged(this, new dtMensagensDisplayRowChangeEvent(((dtMensagensDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMensagensDisplayRowChanging != null)) {
                    this.dtMensagensDisplayRowChanging(this, new dtMensagensDisplayRowChangeEvent(((dtMensagensDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMensagensDisplayRowDeleted != null)) {
                    this.dtMensagensDisplayRowDeleted(this, new dtMensagensDisplayRowChangeEvent(((dtMensagensDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMensagensDisplayRowDeleting != null)) {
                    this.dtMensagensDisplayRowDeleting(this, new dtMensagensDisplayRowChangeEvent(((dtMensagensDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMensagensDisplayRow(dtMensagensDisplayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMensagensDisplayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtFuncionariosDataTable : global::System.Data.TypedTableBase<dtFuncionariosRow> {
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnNome;
            
            private global::System.Data.DataColumn columnSenha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosDataTable() {
                this.TableName = "dtFuncionarios";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtFuncionariosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtFuncionariosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SenhaColumn {
                get {
                    return this.columnSenha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosRow this[int index] {
                get {
                    return ((dtFuncionariosRow)(this.Rows[index]));
                }
            }
            
            public event dtFuncionariosRowChangeEventHandler dtFuncionariosRowChanging;
            
            public event dtFuncionariosRowChangeEventHandler dtFuncionariosRowChanged;
            
            public event dtFuncionariosRowChangeEventHandler dtFuncionariosRowDeleting;
            
            public event dtFuncionariosRowChangeEventHandler dtFuncionariosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtFuncionariosRow(dtFuncionariosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosRow AdddtFuncionariosRow(long PIS, string Nome, int Senha) {
                dtFuncionariosRow rowdtFuncionariosRow = ((dtFuncionariosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PIS,
                        Nome,
                        Senha};
                rowdtFuncionariosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtFuncionariosRow);
                return rowdtFuncionariosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtFuncionariosDataTable cln = ((dtFuncionariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtFuncionariosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPIS = base.Columns["PIS"];
                this.columnNome = base.Columns["Nome"];
                this.columnSenha = base.Columns["Senha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnNome = new global::System.Data.DataColumn("Nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.columnSenha = new global::System.Data.DataColumn("Senha", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenha);
                this.columnNome.MaxLength = 52;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosRow NewdtFuncionariosRow() {
                return ((dtFuncionariosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtFuncionariosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtFuncionariosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtFuncionariosRowChanged != null)) {
                    this.dtFuncionariosRowChanged(this, new dtFuncionariosRowChangeEvent(((dtFuncionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtFuncionariosRowChanging != null)) {
                    this.dtFuncionariosRowChanging(this, new dtFuncionariosRowChangeEvent(((dtFuncionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtFuncionariosRowDeleted != null)) {
                    this.dtFuncionariosRowDeleted(this, new dtFuncionariosRowChangeEvent(((dtFuncionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtFuncionariosRowDeleting != null)) {
                    this.dtFuncionariosRowDeleting(this, new dtFuncionariosRowChangeEvent(((dtFuncionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtFuncionariosRow(dtFuncionariosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtFuncionariosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCredenciaisDataTable : global::System.Data.TypedTableBase<dtCredenciaisRow> {
            
            private global::System.Data.DataColumn columnCredencial;
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnVia;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCredenciaisDataTable() {
                this.TableName = "dtCredenciais";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCredenciaisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCredenciaisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CredencialColumn {
                get {
                    return this.columnCredencial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViaColumn {
                get {
                    return this.columnVia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCredenciaisRow this[int index] {
                get {
                    return ((dtCredenciaisRow)(this.Rows[index]));
                }
            }
            
            public event dtCredenciaisRowChangeEventHandler dtCredenciaisRowChanging;
            
            public event dtCredenciaisRowChangeEventHandler dtCredenciaisRowChanged;
            
            public event dtCredenciaisRowChangeEventHandler dtCredenciaisRowDeleting;
            
            public event dtCredenciaisRowChangeEventHandler dtCredenciaisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCredenciaisRow(dtCredenciaisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCredenciaisRow AdddtCredenciaisRow(string Credencial, long PIS, short Via) {
                dtCredenciaisRow rowdtCredenciaisRow = ((dtCredenciaisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Credencial,
                        PIS,
                        Via};
                rowdtCredenciaisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCredenciaisRow);
                return rowdtCredenciaisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCredenciaisDataTable cln = ((dtCredenciaisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCredenciaisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCredencial = base.Columns["Credencial"];
                this.columnPIS = base.Columns["PIS"];
                this.columnVia = base.Columns["Via"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCredencial = new global::System.Data.DataColumn("Credencial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredencial);
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnVia = new global::System.Data.DataColumn("Via", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVia);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCredenciaisRow NewdtCredenciaisRow() {
                return ((dtCredenciaisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCredenciaisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCredenciaisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCredenciaisRowChanged != null)) {
                    this.dtCredenciaisRowChanged(this, new dtCredenciaisRowChangeEvent(((dtCredenciaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCredenciaisRowChanging != null)) {
                    this.dtCredenciaisRowChanging(this, new dtCredenciaisRowChangeEvent(((dtCredenciaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCredenciaisRowDeleted != null)) {
                    this.dtCredenciaisRowDeleted(this, new dtCredenciaisRowChangeEvent(((dtCredenciaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCredenciaisRowDeleting != null)) {
                    this.dtCredenciaisRowDeleting(this, new dtCredenciaisRowChangeEvent(((dtCredenciaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCredenciaisRow(dtCredenciaisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCredenciaisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtTemplatesRecebidoDataTable : global::System.Data.TypedTableBase<dtTemplatesRecebidoRow> {
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnTemplate;
            
            private global::System.Data.DataColumn columnDedo1;
            
            private global::System.Data.DataColumn columnDedo2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesRecebidoDataTable() {
                this.TableName = "dtTemplatesRecebido";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtTemplatesRecebidoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtTemplatesRecebidoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateColumn {
                get {
                    return this.columnTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dedo1Column {
                get {
                    return this.columnDedo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dedo2Column {
                get {
                    return this.columnDedo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesRecebidoRow this[int index] {
                get {
                    return ((dtTemplatesRecebidoRow)(this.Rows[index]));
                }
            }
            
            public event dtTemplatesRecebidoRowChangeEventHandler dtTemplatesRecebidoRowChanging;
            
            public event dtTemplatesRecebidoRowChangeEventHandler dtTemplatesRecebidoRowChanged;
            
            public event dtTemplatesRecebidoRowChangeEventHandler dtTemplatesRecebidoRowDeleting;
            
            public event dtTemplatesRecebidoRowChangeEventHandler dtTemplatesRecebidoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtTemplatesRecebidoRow(dtTemplatesRecebidoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesRecebidoRow AdddtTemplatesRecebidoRow(long PIS, string Template, short Dedo1, short Dedo2) {
                dtTemplatesRecebidoRow rowdtTemplatesRecebidoRow = ((dtTemplatesRecebidoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PIS,
                        Template,
                        Dedo1,
                        Dedo2};
                rowdtTemplatesRecebidoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtTemplatesRecebidoRow);
                return rowdtTemplatesRecebidoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtTemplatesRecebidoDataTable cln = ((dtTemplatesRecebidoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtTemplatesRecebidoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPIS = base.Columns["PIS"];
                this.columnTemplate = base.Columns["Template"];
                this.columnDedo1 = base.Columns["Dedo1"];
                this.columnDedo2 = base.Columns["Dedo2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnTemplate = new global::System.Data.DataColumn("Template", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplate);
                this.columnDedo1 = new global::System.Data.DataColumn("Dedo1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDedo1);
                this.columnDedo2 = new global::System.Data.DataColumn("Dedo2", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDedo2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesRecebidoRow NewdtTemplatesRecebidoRow() {
                return ((dtTemplatesRecebidoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtTemplatesRecebidoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtTemplatesRecebidoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtTemplatesRecebidoRowChanged != null)) {
                    this.dtTemplatesRecebidoRowChanged(this, new dtTemplatesRecebidoRowChangeEvent(((dtTemplatesRecebidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtTemplatesRecebidoRowChanging != null)) {
                    this.dtTemplatesRecebidoRowChanging(this, new dtTemplatesRecebidoRowChangeEvent(((dtTemplatesRecebidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtTemplatesRecebidoRowDeleted != null)) {
                    this.dtTemplatesRecebidoRowDeleted(this, new dtTemplatesRecebidoRowChangeEvent(((dtTemplatesRecebidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtTemplatesRecebidoRowDeleting != null)) {
                    this.dtTemplatesRecebidoRowDeleting(this, new dtTemplatesRecebidoRowChangeEvent(((dtTemplatesRecebidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtTemplatesRecebidoRow(dtTemplatesRecebidoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtTemplatesRecebidoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSupervisoresDataTable : global::System.Data.TypedTableBase<dtSupervisoresRow> {
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnCredencial;
            
            private global::System.Data.DataColumn columnSenha;
            
            private global::System.Data.DataColumn columnProgramacoesTecnicas;
            
            private global::System.Data.DataColumn columnAlteraDataHora;
            
            private global::System.Data.DataColumn columnProgramaPenDrive;
            
            private global::System.Data.DataColumn columnAlteracaoBobina;
            
            private global::System.Data.DataColumn columnCPF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSupervisoresDataTable() {
                this.TableName = "dtSupervisores";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSupervisoresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSupervisoresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CredencialColumn {
                get {
                    return this.columnCredencial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SenhaColumn {
                get {
                    return this.columnSenha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramacoesTecnicasColumn {
                get {
                    return this.columnProgramacoesTecnicas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlteraDataHoraColumn {
                get {
                    return this.columnAlteraDataHora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramaPenDriveColumn {
                get {
                    return this.columnProgramaPenDrive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlteracaoBobinaColumn {
                get {
                    return this.columnAlteracaoBobina;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSupervisoresRow this[int index] {
                get {
                    return ((dtSupervisoresRow)(this.Rows[index]));
                }
            }
            
            public event dtSupervisoresRowChangeEventHandler dtSupervisoresRowChanging;
            
            public event dtSupervisoresRowChangeEventHandler dtSupervisoresRowChanged;
            
            public event dtSupervisoresRowChangeEventHandler dtSupervisoresRowDeleting;
            
            public event dtSupervisoresRowChangeEventHandler dtSupervisoresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSupervisoresRow(dtSupervisoresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSupervisoresRow AdddtSupervisoresRow(ulong PIS, string Credencial, string Senha, bool ProgramacoesTecnicas, bool AlteraDataHora, bool ProgramaPenDrive, bool AlteracaoBobina, long CPF) {
                dtSupervisoresRow rowdtSupervisoresRow = ((dtSupervisoresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PIS,
                        Credencial,
                        Senha,
                        ProgramacoesTecnicas,
                        AlteraDataHora,
                        ProgramaPenDrive,
                        AlteracaoBobina,
                        CPF};
                rowdtSupervisoresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSupervisoresRow);
                return rowdtSupervisoresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSupervisoresDataTable cln = ((dtSupervisoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSupervisoresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPIS = base.Columns["PIS"];
                this.columnCredencial = base.Columns["Credencial"];
                this.columnSenha = base.Columns["Senha"];
                this.columnProgramacoesTecnicas = base.Columns["ProgramacoesTecnicas"];
                this.columnAlteraDataHora = base.Columns["AlteraDataHora"];
                this.columnProgramaPenDrive = base.Columns["ProgramaPenDrive"];
                this.columnAlteracaoBobina = base.Columns["AlteracaoBobina"];
                this.columnCPF = base.Columns["CPF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnCredencial = new global::System.Data.DataColumn("Credencial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredencial);
                this.columnSenha = new global::System.Data.DataColumn("Senha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenha);
                this.columnProgramacoesTecnicas = new global::System.Data.DataColumn("ProgramacoesTecnicas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramacoesTecnicas);
                this.columnAlteraDataHora = new global::System.Data.DataColumn("AlteraDataHora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlteraDataHora);
                this.columnProgramaPenDrive = new global::System.Data.DataColumn("ProgramaPenDrive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramaPenDrive);
                this.columnAlteracaoBobina = new global::System.Data.DataColumn("AlteracaoBobina", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlteracaoBobina);
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
                this.columnSenha.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSupervisoresRow NewdtSupervisoresRow() {
                return ((dtSupervisoresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSupervisoresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSupervisoresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSupervisoresRowChanged != null)) {
                    this.dtSupervisoresRowChanged(this, new dtSupervisoresRowChangeEvent(((dtSupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSupervisoresRowChanging != null)) {
                    this.dtSupervisoresRowChanging(this, new dtSupervisoresRowChangeEvent(((dtSupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSupervisoresRowDeleted != null)) {
                    this.dtSupervisoresRowDeleted(this, new dtSupervisoresRowChangeEvent(((dtSupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSupervisoresRowDeleting != null)) {
                    this.dtSupervisoresRowDeleting(this, new dtSupervisoresRowChangeEvent(((dtSupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSupervisoresRow(dtSupervisoresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSupervisoresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMRPAlteracaoEmpregadorDataTable : global::System.Data.TypedTableBase<dtMRPAlteracaoEmpregadorRow> {
            
            private global::System.Data.DataColumn columnNSR;
            
            private global::System.Data.DataColumn columnDataHoraGravacao;
            
            private global::System.Data.DataColumn columnCNPJ_CPF;
            
            private global::System.Data.DataColumn columnCEI;
            
            private global::System.Data.DataColumn columnRazaoSocial;
            
            private global::System.Data.DataColumn columnEndereco;
            
            private global::System.Data.DataColumn columnCPF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPAlteracaoEmpregadorDataTable() {
                this.TableName = "dtMRPAlteracaoEmpregador";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPAlteracaoEmpregadorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMRPAlteracaoEmpregadorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSRColumn {
                get {
                    return this.columnNSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraGravacaoColumn {
                get {
                    return this.columnDataHoraGravacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNPJ_CPFColumn {
                get {
                    return this.columnCNPJ_CPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEIColumn {
                get {
                    return this.columnCEI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RazaoSocialColumn {
                get {
                    return this.columnRazaoSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnderecoColumn {
                get {
                    return this.columnEndereco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPAlteracaoEmpregadorRow this[int index] {
                get {
                    return ((dtMRPAlteracaoEmpregadorRow)(this.Rows[index]));
                }
            }
            
            public event dtMRPAlteracaoEmpregadorRowChangeEventHandler dtMRPAlteracaoEmpregadorRowChanging;
            
            public event dtMRPAlteracaoEmpregadorRowChangeEventHandler dtMRPAlteracaoEmpregadorRowChanged;
            
            public event dtMRPAlteracaoEmpregadorRowChangeEventHandler dtMRPAlteracaoEmpregadorRowDeleting;
            
            public event dtMRPAlteracaoEmpregadorRowChangeEventHandler dtMRPAlteracaoEmpregadorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMRPAlteracaoEmpregadorRow(dtMRPAlteracaoEmpregadorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPAlteracaoEmpregadorRow AdddtMRPAlteracaoEmpregadorRow(string NSR, System.DateTime DataHoraGravacao, string CNPJ_CPF, string CEI, string RazaoSocial, string Endereco, string CPF) {
                dtMRPAlteracaoEmpregadorRow rowdtMRPAlteracaoEmpregadorRow = ((dtMRPAlteracaoEmpregadorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NSR,
                        DataHoraGravacao,
                        CNPJ_CPF,
                        CEI,
                        RazaoSocial,
                        Endereco,
                        CPF};
                rowdtMRPAlteracaoEmpregadorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMRPAlteracaoEmpregadorRow);
                return rowdtMRPAlteracaoEmpregadorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMRPAlteracaoEmpregadorDataTable cln = ((dtMRPAlteracaoEmpregadorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMRPAlteracaoEmpregadorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNSR = base.Columns["NSR"];
                this.columnDataHoraGravacao = base.Columns["DataHoraGravacao"];
                this.columnCNPJ_CPF = base.Columns["CNPJ_CPF"];
                this.columnCEI = base.Columns["CEI"];
                this.columnRazaoSocial = base.Columns["RazaoSocial"];
                this.columnEndereco = base.Columns["Endereco"];
                this.columnCPF = base.Columns["CPF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNSR = new global::System.Data.DataColumn("NSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSR);
                this.columnDataHoraGravacao = new global::System.Data.DataColumn("DataHoraGravacao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraGravacao);
                this.columnCNPJ_CPF = new global::System.Data.DataColumn("CNPJ_CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNPJ_CPF);
                this.columnCEI = new global::System.Data.DataColumn("CEI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEI);
                this.columnRazaoSocial = new global::System.Data.DataColumn("RazaoSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazaoSocial);
                this.columnEndereco = new global::System.Data.DataColumn("Endereco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndereco);
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
                this.columnNSR.MaxLength = 10;
                this.columnCNPJ_CPF.MaxLength = 14;
                this.columnCEI.MaxLength = 12;
                this.columnRazaoSocial.MaxLength = 150;
                this.columnEndereco.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPAlteracaoEmpregadorRow NewdtMRPAlteracaoEmpregadorRow() {
                return ((dtMRPAlteracaoEmpregadorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMRPAlteracaoEmpregadorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMRPAlteracaoEmpregadorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMRPAlteracaoEmpregadorRowChanged != null)) {
                    this.dtMRPAlteracaoEmpregadorRowChanged(this, new dtMRPAlteracaoEmpregadorRowChangeEvent(((dtMRPAlteracaoEmpregadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMRPAlteracaoEmpregadorRowChanging != null)) {
                    this.dtMRPAlteracaoEmpregadorRowChanging(this, new dtMRPAlteracaoEmpregadorRowChangeEvent(((dtMRPAlteracaoEmpregadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMRPAlteracaoEmpregadorRowDeleted != null)) {
                    this.dtMRPAlteracaoEmpregadorRowDeleted(this, new dtMRPAlteracaoEmpregadorRowChangeEvent(((dtMRPAlteracaoEmpregadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMRPAlteracaoEmpregadorRowDeleting != null)) {
                    this.dtMRPAlteracaoEmpregadorRowDeleting(this, new dtMRPAlteracaoEmpregadorRowChangeEvent(((dtMRPAlteracaoEmpregadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMRPAlteracaoEmpregadorRow(dtMRPAlteracaoEmpregadorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMRPAlteracaoEmpregadorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMRPMarcacaoDataTable : global::System.Data.TypedTableBase<dtMRPMarcacaoRow> {
            
            private global::System.Data.DataColumn columnNSR;
            
            private global::System.Data.DataColumn columnDataHoraGravacao;
            
            private global::System.Data.DataColumn columnPIS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPMarcacaoDataTable() {
                this.TableName = "dtMRPMarcacao";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPMarcacaoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMRPMarcacaoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSRColumn {
                get {
                    return this.columnNSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraGravacaoColumn {
                get {
                    return this.columnDataHoraGravacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPMarcacaoRow this[int index] {
                get {
                    return ((dtMRPMarcacaoRow)(this.Rows[index]));
                }
            }
            
            public event dtMRPMarcacaoRowChangeEventHandler dtMRPMarcacaoRowChanging;
            
            public event dtMRPMarcacaoRowChangeEventHandler dtMRPMarcacaoRowChanged;
            
            public event dtMRPMarcacaoRowChangeEventHandler dtMRPMarcacaoRowDeleting;
            
            public event dtMRPMarcacaoRowChangeEventHandler dtMRPMarcacaoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMRPMarcacaoRow(dtMRPMarcacaoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPMarcacaoRow AdddtMRPMarcacaoRow(string NSR, System.DateTime DataHoraGravacao, string PIS) {
                dtMRPMarcacaoRow rowdtMRPMarcacaoRow = ((dtMRPMarcacaoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NSR,
                        DataHoraGravacao,
                        PIS};
                rowdtMRPMarcacaoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMRPMarcacaoRow);
                return rowdtMRPMarcacaoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMRPMarcacaoDataTable cln = ((dtMRPMarcacaoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMRPMarcacaoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNSR = base.Columns["NSR"];
                this.columnDataHoraGravacao = base.Columns["DataHoraGravacao"];
                this.columnPIS = base.Columns["PIS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNSR = new global::System.Data.DataColumn("NSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSR);
                this.columnDataHoraGravacao = new global::System.Data.DataColumn("DataHoraGravacao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraGravacao);
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPMarcacaoRow NewdtMRPMarcacaoRow() {
                return ((dtMRPMarcacaoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMRPMarcacaoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMRPMarcacaoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMRPMarcacaoRowChanged != null)) {
                    this.dtMRPMarcacaoRowChanged(this, new dtMRPMarcacaoRowChangeEvent(((dtMRPMarcacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMRPMarcacaoRowChanging != null)) {
                    this.dtMRPMarcacaoRowChanging(this, new dtMRPMarcacaoRowChangeEvent(((dtMRPMarcacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMRPMarcacaoRowDeleted != null)) {
                    this.dtMRPMarcacaoRowDeleted(this, new dtMRPMarcacaoRowChangeEvent(((dtMRPMarcacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMRPMarcacaoRowDeleting != null)) {
                    this.dtMRPMarcacaoRowDeleting(this, new dtMRPMarcacaoRowChangeEvent(((dtMRPMarcacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMRPMarcacaoRow(dtMRPMarcacaoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMRPMarcacaoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMRPDataHoraDataTable : global::System.Data.TypedTableBase<dtMRPDataHoraRow> {
            
            private global::System.Data.DataColumn columnNSR;
            
            private global::System.Data.DataColumn columnDataHoraAnterior;
            
            private global::System.Data.DataColumn columnDataHoraAtual;
            
            private global::System.Data.DataColumn columnCPF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPDataHoraDataTable() {
                this.TableName = "dtMRPDataHora";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPDataHoraDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMRPDataHoraDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSRColumn {
                get {
                    return this.columnNSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraAnteriorColumn {
                get {
                    return this.columnDataHoraAnterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraAtualColumn {
                get {
                    return this.columnDataHoraAtual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPDataHoraRow this[int index] {
                get {
                    return ((dtMRPDataHoraRow)(this.Rows[index]));
                }
            }
            
            public event dtMRPDataHoraRowChangeEventHandler dtMRPDataHoraRowChanging;
            
            public event dtMRPDataHoraRowChangeEventHandler dtMRPDataHoraRowChanged;
            
            public event dtMRPDataHoraRowChangeEventHandler dtMRPDataHoraRowDeleting;
            
            public event dtMRPDataHoraRowChangeEventHandler dtMRPDataHoraRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMRPDataHoraRow(dtMRPDataHoraRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPDataHoraRow AdddtMRPDataHoraRow(string NSR, System.DateTime DataHoraAnterior, System.DateTime DataHoraAtual, string CPF) {
                dtMRPDataHoraRow rowdtMRPDataHoraRow = ((dtMRPDataHoraRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NSR,
                        DataHoraAnterior,
                        DataHoraAtual,
                        CPF};
                rowdtMRPDataHoraRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMRPDataHoraRow);
                return rowdtMRPDataHoraRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMRPDataHoraDataTable cln = ((dtMRPDataHoraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMRPDataHoraDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNSR = base.Columns["NSR"];
                this.columnDataHoraAnterior = base.Columns["DataHoraAnterior"];
                this.columnDataHoraAtual = base.Columns["DataHoraAtual"];
                this.columnCPF = base.Columns["CPF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNSR = new global::System.Data.DataColumn("NSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSR);
                this.columnDataHoraAnterior = new global::System.Data.DataColumn("DataHoraAnterior", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraAnterior);
                this.columnDataHoraAtual = new global::System.Data.DataColumn("DataHoraAtual", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraAtual);
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPDataHoraRow NewdtMRPDataHoraRow() {
                return ((dtMRPDataHoraRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMRPDataHoraRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMRPDataHoraRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMRPDataHoraRowChanged != null)) {
                    this.dtMRPDataHoraRowChanged(this, new dtMRPDataHoraRowChangeEvent(((dtMRPDataHoraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMRPDataHoraRowChanging != null)) {
                    this.dtMRPDataHoraRowChanging(this, new dtMRPDataHoraRowChangeEvent(((dtMRPDataHoraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMRPDataHoraRowDeleted != null)) {
                    this.dtMRPDataHoraRowDeleted(this, new dtMRPDataHoraRowChangeEvent(((dtMRPDataHoraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMRPDataHoraRowDeleting != null)) {
                    this.dtMRPDataHoraRowDeleting(this, new dtMRPDataHoraRowChangeEvent(((dtMRPDataHoraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMRPDataHoraRow(dtMRPDataHoraRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMRPDataHoraDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMRPEmpregadoDataTable : global::System.Data.TypedTableBase<dtMRPEmpregadoRow> {
            
            private global::System.Data.DataColumn columnNSR;
            
            private global::System.Data.DataColumn columnDataHoraAlteracao;
            
            private global::System.Data.DataColumn columnTipoAlteracao;
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnNome;
            
            private global::System.Data.DataColumn columnCPF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEmpregadoDataTable() {
                this.TableName = "dtMRPEmpregado";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPEmpregadoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMRPEmpregadoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSRColumn {
                get {
                    return this.columnNSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraAlteracaoColumn {
                get {
                    return this.columnDataHoraAlteracao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoAlteracaoColumn {
                get {
                    return this.columnTipoAlteracao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEmpregadoRow this[int index] {
                get {
                    return ((dtMRPEmpregadoRow)(this.Rows[index]));
                }
            }
            
            public event dtMRPEmpregadoRowChangeEventHandler dtMRPEmpregadoRowChanging;
            
            public event dtMRPEmpregadoRowChangeEventHandler dtMRPEmpregadoRowChanged;
            
            public event dtMRPEmpregadoRowChangeEventHandler dtMRPEmpregadoRowDeleting;
            
            public event dtMRPEmpregadoRowChangeEventHandler dtMRPEmpregadoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMRPEmpregadoRow(dtMRPEmpregadoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEmpregadoRow AdddtMRPEmpregadoRow(string NSR, System.DateTime DataHoraAlteracao, string TipoAlteracao, string PIS, string Nome, string CPF) {
                dtMRPEmpregadoRow rowdtMRPEmpregadoRow = ((dtMRPEmpregadoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NSR,
                        DataHoraAlteracao,
                        TipoAlteracao,
                        PIS,
                        Nome,
                        CPF};
                rowdtMRPEmpregadoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMRPEmpregadoRow);
                return rowdtMRPEmpregadoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMRPEmpregadoDataTable cln = ((dtMRPEmpregadoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMRPEmpregadoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNSR = base.Columns["NSR"];
                this.columnDataHoraAlteracao = base.Columns["DataHoraAlteracao"];
                this.columnTipoAlteracao = base.Columns["TipoAlteracao"];
                this.columnPIS = base.Columns["PIS"];
                this.columnNome = base.Columns["Nome"];
                this.columnCPF = base.Columns["CPF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNSR = new global::System.Data.DataColumn("NSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSR);
                this.columnDataHoraAlteracao = new global::System.Data.DataColumn("DataHoraAlteracao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraAlteracao);
                this.columnTipoAlteracao = new global::System.Data.DataColumn("TipoAlteracao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoAlteracao);
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnNome = new global::System.Data.DataColumn("Nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEmpregadoRow NewdtMRPEmpregadoRow() {
                return ((dtMRPEmpregadoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMRPEmpregadoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMRPEmpregadoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMRPEmpregadoRowChanged != null)) {
                    this.dtMRPEmpregadoRowChanged(this, new dtMRPEmpregadoRowChangeEvent(((dtMRPEmpregadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMRPEmpregadoRowChanging != null)) {
                    this.dtMRPEmpregadoRowChanging(this, new dtMRPEmpregadoRowChangeEvent(((dtMRPEmpregadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMRPEmpregadoRowDeleted != null)) {
                    this.dtMRPEmpregadoRowDeleted(this, new dtMRPEmpregadoRowChangeEvent(((dtMRPEmpregadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMRPEmpregadoRowDeleting != null)) {
                    this.dtMRPEmpregadoRowDeleting(this, new dtMRPEmpregadoRowChangeEvent(((dtMRPEmpregadoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMRPEmpregadoRow(dtMRPEmpregadoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMRPEmpregadoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtStatusDataTable : global::System.Data.TypedTableBase<dtStatusRow> {
            
            private global::System.Data.DataColumn columnPropriedade;
            
            private global::System.Data.DataColumn columnValor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtStatusDataTable() {
                this.TableName = "dtStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PropriedadeColumn {
                get {
                    return this.columnPropriedade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtStatusRow this[int index] {
                get {
                    return ((dtStatusRow)(this.Rows[index]));
                }
            }
            
            public event dtStatusRowChangeEventHandler dtStatusRowChanging;
            
            public event dtStatusRowChangeEventHandler dtStatusRowChanged;
            
            public event dtStatusRowChangeEventHandler dtStatusRowDeleting;
            
            public event dtStatusRowChangeEventHandler dtStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtStatusRow(dtStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtStatusRow AdddtStatusRow(string Propriedade, string Valor) {
                dtStatusRow rowdtStatusRow = ((dtStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Propriedade,
                        Valor};
                rowdtStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtStatusRow);
                return rowdtStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtStatusDataTable cln = ((dtStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPropriedade = base.Columns["Propriedade"];
                this.columnValor = base.Columns["Valor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPropriedade = new global::System.Data.DataColumn("Propriedade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropriedade);
                this.columnValor = new global::System.Data.DataColumn("Valor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtStatusRow NewdtStatusRow() {
                return ((dtStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtStatusRowChanged != null)) {
                    this.dtStatusRowChanged(this, new dtStatusRowChangeEvent(((dtStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtStatusRowChanging != null)) {
                    this.dtStatusRowChanging(this, new dtStatusRowChangeEvent(((dtStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtStatusRowDeleted != null)) {
                    this.dtStatusRowDeleted(this, new dtStatusRowChangeEvent(((dtStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtStatusRowDeleting != null)) {
                    this.dtStatusRowDeleting(this, new dtStatusRowChangeEvent(((dtStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtStatusRow(dtStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtTemplatesParaEnvioDataTable : global::System.Data.TypedTableBase<dtTemplatesParaEnvioRow> {
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnTemplate;
            
            private global::System.Data.DataColumn columnDedo1;
            
            private global::System.Data.DataColumn columnDedo2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesParaEnvioDataTable() {
                this.TableName = "dtTemplatesParaEnvio";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtTemplatesParaEnvioDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtTemplatesParaEnvioDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateColumn {
                get {
                    return this.columnTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dedo1Column {
                get {
                    return this.columnDedo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dedo2Column {
                get {
                    return this.columnDedo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesParaEnvioRow this[int index] {
                get {
                    return ((dtTemplatesParaEnvioRow)(this.Rows[index]));
                }
            }
            
            public event dtTemplatesParaEnvioRowChangeEventHandler dtTemplatesParaEnvioRowChanging;
            
            public event dtTemplatesParaEnvioRowChangeEventHandler dtTemplatesParaEnvioRowChanged;
            
            public event dtTemplatesParaEnvioRowChangeEventHandler dtTemplatesParaEnvioRowDeleting;
            
            public event dtTemplatesParaEnvioRowChangeEventHandler dtTemplatesParaEnvioRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtTemplatesParaEnvioRow(dtTemplatesParaEnvioRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesParaEnvioRow AdddtTemplatesParaEnvioRow(long PIS, string Template, short Dedo1, short Dedo2) {
                dtTemplatesParaEnvioRow rowdtTemplatesParaEnvioRow = ((dtTemplatesParaEnvioRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PIS,
                        Template,
                        Dedo1,
                        Dedo2};
                rowdtTemplatesParaEnvioRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtTemplatesParaEnvioRow);
                return rowdtTemplatesParaEnvioRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtTemplatesParaEnvioDataTable cln = ((dtTemplatesParaEnvioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtTemplatesParaEnvioDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPIS = base.Columns["PIS"];
                this.columnTemplate = base.Columns["Template"];
                this.columnDedo1 = base.Columns["Dedo1"];
                this.columnDedo2 = base.Columns["Dedo2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnTemplate = new global::System.Data.DataColumn("Template", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplate);
                this.columnDedo1 = new global::System.Data.DataColumn("Dedo1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDedo1);
                this.columnDedo2 = new global::System.Data.DataColumn("Dedo2", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDedo2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesParaEnvioRow NewdtTemplatesParaEnvioRow() {
                return ((dtTemplatesParaEnvioRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtTemplatesParaEnvioRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtTemplatesParaEnvioRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtTemplatesParaEnvioRowChanged != null)) {
                    this.dtTemplatesParaEnvioRowChanged(this, new dtTemplatesParaEnvioRowChangeEvent(((dtTemplatesParaEnvioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtTemplatesParaEnvioRowChanging != null)) {
                    this.dtTemplatesParaEnvioRowChanging(this, new dtTemplatesParaEnvioRowChangeEvent(((dtTemplatesParaEnvioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtTemplatesParaEnvioRowDeleted != null)) {
                    this.dtTemplatesParaEnvioRowDeleted(this, new dtTemplatesParaEnvioRowChangeEvent(((dtTemplatesParaEnvioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtTemplatesParaEnvioRowDeleting != null)) {
                    this.dtTemplatesParaEnvioRowDeleting(this, new dtTemplatesParaEnvioRowChangeEvent(((dtTemplatesParaEnvioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtTemplatesParaEnvioRow(dtTemplatesParaEnvioRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtTemplatesParaEnvioDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtEventosDataTable : global::System.Data.TypedTableBase<dtEventosRow> {
            
            private global::System.Data.DataColumn columnDataHoraEvento;
            
            private global::System.Data.DataColumn columnEvento;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosDataTable() {
                this.TableName = "dtEventos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEventosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtEventosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraEventoColumn {
                get {
                    return this.columnDataHoraEvento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventoColumn {
                get {
                    return this.columnEvento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosRow this[int index] {
                get {
                    return ((dtEventosRow)(this.Rows[index]));
                }
            }
            
            public event dtEventosRowChangeEventHandler dtEventosRowChanging;
            
            public event dtEventosRowChangeEventHandler dtEventosRowChanged;
            
            public event dtEventosRowChangeEventHandler dtEventosRowDeleting;
            
            public event dtEventosRowChangeEventHandler dtEventosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtEventosRow(dtEventosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosRow AdddtEventosRow(string DataHoraEvento, string Evento) {
                dtEventosRow rowdtEventosRow = ((dtEventosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DataHoraEvento,
                        Evento};
                rowdtEventosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtEventosRow);
                return rowdtEventosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtEventosDataTable cln = ((dtEventosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtEventosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDataHoraEvento = base.Columns["DataHoraEvento"];
                this.columnEvento = base.Columns["Evento"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDataHoraEvento = new global::System.Data.DataColumn("DataHoraEvento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraEvento);
                this.columnEvento = new global::System.Data.DataColumn("Evento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvento);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosRow NewdtEventosRow() {
                return ((dtEventosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtEventosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtEventosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtEventosRowChanged != null)) {
                    this.dtEventosRowChanged(this, new dtEventosRowChangeEvent(((dtEventosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtEventosRowChanging != null)) {
                    this.dtEventosRowChanging(this, new dtEventosRowChangeEvent(((dtEventosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtEventosRowDeleted != null)) {
                    this.dtEventosRowDeleted(this, new dtEventosRowChangeEvent(((dtEventosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtEventosRowDeleting != null)) {
                    this.dtEventosRowDeleting(this, new dtEventosRowChangeEvent(((dtEventosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtEventosRow(dtEventosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtEventosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMRPEventosSensiveisDataTable : global::System.Data.TypedTableBase<dtMRPEventosSensiveisRow> {
            
            private global::System.Data.DataColumn columnNSR;
            
            private global::System.Data.DataColumn columnDataHoraEvento;
            
            private global::System.Data.DataColumn columnTipoEvento;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEventosSensiveisDataTable() {
                this.TableName = "dtMRPEventosSensiveis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPEventosSensiveisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMRPEventosSensiveisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSRColumn {
                get {
                    return this.columnNSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraEventoColumn {
                get {
                    return this.columnDataHoraEvento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoEventoColumn {
                get {
                    return this.columnTipoEvento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEventosSensiveisRow this[int index] {
                get {
                    return ((dtMRPEventosSensiveisRow)(this.Rows[index]));
                }
            }
            
            public event dtMRPEventosSensiveisRowChangeEventHandler dtMRPEventosSensiveisRowChanging;
            
            public event dtMRPEventosSensiveisRowChangeEventHandler dtMRPEventosSensiveisRowChanged;
            
            public event dtMRPEventosSensiveisRowChangeEventHandler dtMRPEventosSensiveisRowDeleting;
            
            public event dtMRPEventosSensiveisRowChangeEventHandler dtMRPEventosSensiveisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMRPEventosSensiveisRow(dtMRPEventosSensiveisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEventosSensiveisRow AdddtMRPEventosSensiveisRow(string NSR, System.DateTime DataHoraEvento, string TipoEvento) {
                dtMRPEventosSensiveisRow rowdtMRPEventosSensiveisRow = ((dtMRPEventosSensiveisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NSR,
                        DataHoraEvento,
                        TipoEvento};
                rowdtMRPEventosSensiveisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMRPEventosSensiveisRow);
                return rowdtMRPEventosSensiveisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMRPEventosSensiveisDataTable cln = ((dtMRPEventosSensiveisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMRPEventosSensiveisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNSR = base.Columns["NSR"];
                this.columnDataHoraEvento = base.Columns["DataHoraEvento"];
                this.columnTipoEvento = base.Columns["TipoEvento"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNSR = new global::System.Data.DataColumn("NSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSR);
                this.columnDataHoraEvento = new global::System.Data.DataColumn("DataHoraEvento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHoraEvento);
                this.columnTipoEvento = new global::System.Data.DataColumn("TipoEvento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoEvento);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEventosSensiveisRow NewdtMRPEventosSensiveisRow() {
                return ((dtMRPEventosSensiveisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMRPEventosSensiveisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMRPEventosSensiveisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMRPEventosSensiveisRowChanged != null)) {
                    this.dtMRPEventosSensiveisRowChanged(this, new dtMRPEventosSensiveisRowChangeEvent(((dtMRPEventosSensiveisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMRPEventosSensiveisRowChanging != null)) {
                    this.dtMRPEventosSensiveisRowChanging(this, new dtMRPEventosSensiveisRowChangeEvent(((dtMRPEventosSensiveisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMRPEventosSensiveisRowDeleted != null)) {
                    this.dtMRPEventosSensiveisRowDeleted(this, new dtMRPEventosSensiveisRowChangeEvent(((dtMRPEventosSensiveisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMRPEventosSensiveisRowDeleting != null)) {
                    this.dtMRPEventosSensiveisRowDeleting(this, new dtMRPEventosSensiveisRowChangeEvent(((dtMRPEventosSensiveisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMRPEventosSensiveisRow(dtMRPEventosSensiveisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMRPEventosSensiveisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtFuncionariosCompletosDataTable : global::System.Data.TypedTableBase<dtFuncionariosCompletosRow> {
            
            private global::System.Data.DataColumn columnPIS;
            
            private global::System.Data.DataColumn columnNome;
            
            private global::System.Data.DataColumn columnSenha;
            
            private global::System.Data.DataColumn columnCredencial;
            
            private global::System.Data.DataColumn columnVia;
            
            private global::System.Data.DataColumn columnTemplate;
            
            private global::System.Data.DataColumn columnDedo1;
            
            private global::System.Data.DataColumn columnDedo2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosCompletosDataTable() {
                this.TableName = "dtFuncionariosCompletos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtFuncionariosCompletosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtFuncionariosCompletosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISColumn {
                get {
                    return this.columnPIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SenhaColumn {
                get {
                    return this.columnSenha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CredencialColumn {
                get {
                    return this.columnCredencial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViaColumn {
                get {
                    return this.columnVia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemplateColumn {
                get {
                    return this.columnTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dedo1Column {
                get {
                    return this.columnDedo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dedo2Column {
                get {
                    return this.columnDedo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosCompletosRow this[int index] {
                get {
                    return ((dtFuncionariosCompletosRow)(this.Rows[index]));
                }
            }
            
            public event dtFuncionariosCompletosRowChangeEventHandler dtFuncionariosCompletosRowChanging;
            
            public event dtFuncionariosCompletosRowChangeEventHandler dtFuncionariosCompletosRowChanged;
            
            public event dtFuncionariosCompletosRowChangeEventHandler dtFuncionariosCompletosRowDeleting;
            
            public event dtFuncionariosCompletosRowChangeEventHandler dtFuncionariosCompletosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtFuncionariosCompletosRow(dtFuncionariosCompletosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosCompletosRow AdddtFuncionariosCompletosRow(long PIS, string Nome, int Senha, string Credencial, short Via, string Template, short Dedo1, short Dedo2) {
                dtFuncionariosCompletosRow rowdtFuncionariosCompletosRow = ((dtFuncionariosCompletosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PIS,
                        Nome,
                        Senha,
                        Credencial,
                        Via,
                        Template,
                        Dedo1,
                        Dedo2};
                rowdtFuncionariosCompletosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtFuncionariosCompletosRow);
                return rowdtFuncionariosCompletosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtFuncionariosCompletosDataTable cln = ((dtFuncionariosCompletosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtFuncionariosCompletosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPIS = base.Columns["PIS"];
                this.columnNome = base.Columns["Nome"];
                this.columnSenha = base.Columns["Senha"];
                this.columnCredencial = base.Columns["Credencial"];
                this.columnVia = base.Columns["Via"];
                this.columnTemplate = base.Columns["Template"];
                this.columnDedo1 = base.Columns["Dedo1"];
                this.columnDedo2 = base.Columns["Dedo2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPIS = new global::System.Data.DataColumn("PIS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIS);
                this.columnNome = new global::System.Data.DataColumn("Nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.columnSenha = new global::System.Data.DataColumn("Senha", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenha);
                this.columnCredencial = new global::System.Data.DataColumn("Credencial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredencial);
                this.columnVia = new global::System.Data.DataColumn("Via", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVia);
                this.columnTemplate = new global::System.Data.DataColumn("Template", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplate);
                this.columnDedo1 = new global::System.Data.DataColumn("Dedo1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDedo1);
                this.columnDedo2 = new global::System.Data.DataColumn("Dedo2", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDedo2);
                this.columnNome.MaxLength = 52;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosCompletosRow NewdtFuncionariosCompletosRow() {
                return ((dtFuncionariosCompletosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtFuncionariosCompletosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtFuncionariosCompletosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtFuncionariosCompletosRowChanged != null)) {
                    this.dtFuncionariosCompletosRowChanged(this, new dtFuncionariosCompletosRowChangeEvent(((dtFuncionariosCompletosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtFuncionariosCompletosRowChanging != null)) {
                    this.dtFuncionariosCompletosRowChanging(this, new dtFuncionariosCompletosRowChangeEvent(((dtFuncionariosCompletosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtFuncionariosCompletosRowDeleted != null)) {
                    this.dtFuncionariosCompletosRowDeleted(this, new dtFuncionariosCompletosRowChangeEvent(((dtFuncionariosCompletosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtFuncionariosCompletosRowDeleting != null)) {
                    this.dtFuncionariosCompletosRowDeleting(this, new dtFuncionariosCompletosRowChangeEvent(((dtFuncionariosCompletosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtFuncionariosCompletosRow(dtFuncionariosCompletosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtFuncionariosCompletosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtEventosSistemaDataTable : global::System.Data.TypedTableBase<dtEventosSistemaRow> {
            
            private global::System.Data.DataColumn columnNumeroSequencial;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columnDataHora;
            
            private global::System.Data.DataColumn columnDetalhes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosSistemaDataTable() {
                this.TableName = "dtEventosSistema";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEventosSistemaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtEventosSistemaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroSequencialColumn {
                get {
                    return this.columnNumeroSequencial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataHoraColumn {
                get {
                    return this.columnDataHora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetalhesColumn {
                get {
                    return this.columnDetalhes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosSistemaRow this[int index] {
                get {
                    return ((dtEventosSistemaRow)(this.Rows[index]));
                }
            }
            
            public event dtEventosSistemaRowChangeEventHandler dtEventosSistemaRowChanging;
            
            public event dtEventosSistemaRowChangeEventHandler dtEventosSistemaRowChanged;
            
            public event dtEventosSistemaRowChangeEventHandler dtEventosSistemaRowDeleting;
            
            public event dtEventosSistemaRowChangeEventHandler dtEventosSistemaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtEventosSistemaRow(dtEventosSistemaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosSistemaRow AdddtEventosSistemaRow(string NumeroSequencial, string Tipo, string DataHora, string Detalhes) {
                dtEventosSistemaRow rowdtEventosSistemaRow = ((dtEventosSistemaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumeroSequencial,
                        Tipo,
                        DataHora,
                        Detalhes};
                rowdtEventosSistemaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtEventosSistemaRow);
                return rowdtEventosSistemaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtEventosSistemaDataTable cln = ((dtEventosSistemaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtEventosSistemaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNumeroSequencial = base.Columns["NumeroSequencial"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnDataHora = base.Columns["DataHora"];
                this.columnDetalhes = base.Columns["Detalhes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNumeroSequencial = new global::System.Data.DataColumn("NumeroSequencial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroSequencial);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnDataHora = new global::System.Data.DataColumn("DataHora", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataHora);
                this.columnDetalhes = new global::System.Data.DataColumn("Detalhes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetalhes);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosSistemaRow NewdtEventosSistemaRow() {
                return ((dtEventosSistemaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtEventosSistemaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtEventosSistemaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtEventosSistemaRowChanged != null)) {
                    this.dtEventosSistemaRowChanged(this, new dtEventosSistemaRowChangeEvent(((dtEventosSistemaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtEventosSistemaRowChanging != null)) {
                    this.dtEventosSistemaRowChanging(this, new dtEventosSistemaRowChangeEvent(((dtEventosSistemaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtEventosSistemaRowDeleted != null)) {
                    this.dtEventosSistemaRowDeleted(this, new dtEventosSistemaRowChangeEvent(((dtEventosSistemaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtEventosSistemaRowDeleting != null)) {
                    this.dtEventosSistemaRowDeleting(this, new dtEventosSistemaRowChangeEvent(((dtEventosSistemaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtEventosSistemaRow(dtEventosSistemaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSDKREP ds = new dsSDKREP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtEventosSistemaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtHistoricoComandosRow : global::System.Data.DataRow {
            
            private dtHistoricoComandosDataTable tabledtHistoricoComandos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtHistoricoComandosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtHistoricoComandos = ((dtHistoricoComandosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataHora {
                get {
                    try {
                        return ((string)(this[this.tabledtHistoricoComandos.DataHoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHora\' in table \'dtHistoricoComandos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtHistoricoComandos.DataHoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comando {
                get {
                    try {
                        return ((string)(this[this.tabledtHistoricoComandos.ComandoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comando\' in table \'dtHistoricoComandos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtHistoricoComandos.ComandoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descricao {
                get {
                    try {
                        return ((string)(this[this.tabledtHistoricoComandos.DescricaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descricao\' in table \'dtHistoricoComandos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtHistoricoComandos.DescricaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraNull() {
                return this.IsNull(this.tabledtHistoricoComandos.DataHoraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraNull() {
                this[this.tabledtHistoricoComandos.DataHoraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComandoNull() {
                return this.IsNull(this.tabledtHistoricoComandos.ComandoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComandoNull() {
                this[this.tabledtHistoricoComandos.ComandoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescricaoNull() {
                return this.IsNull(this.tabledtHistoricoComandos.DescricaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescricaoNull() {
                this[this.tabledtHistoricoComandos.DescricaoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMensagensDisplayRow : global::System.Data.DataRow {
            
            private dtMensagensDisplayDataTable tabledtMensagensDisplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMensagensDisplayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMensagensDisplay = ((dtMensagensDisplayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo {
                get {
                    try {
                        return ((int)(this[this.tabledtMensagensDisplay.CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Codigo\' in table \'dtMensagensDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMensagensDisplay.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mensagem {
                get {
                    try {
                        return ((string)(this[this.tabledtMensagensDisplay.MensagemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mensagem\' in table \'dtMensagensDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMensagensDisplay.MensagemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoNull() {
                return this.IsNull(this.tabledtMensagensDisplay.CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoNull() {
                this[this.tabledtMensagensDisplay.CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMensagemNull() {
                return this.IsNull(this.tabledtMensagensDisplay.MensagemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMensagemNull() {
                this[this.tabledtMensagensDisplay.MensagemColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtFuncionariosRow : global::System.Data.DataRow {
            
            private dtFuncionariosDataTable tabledtFuncionarios;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtFuncionariosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtFuncionarios = ((dtFuncionariosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIS {
                get {
                    try {
                        return ((long)(this[this.tabledtFuncionarios.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtFuncionarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionarios.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    try {
                        return ((string)(this[this.tabledtFuncionarios.NomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nome\' in table \'dtFuncionarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionarios.NomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Senha {
                get {
                    try {
                        return ((int)(this[this.tabledtFuncionarios.SenhaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Senha\' in table \'dtFuncionarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionarios.SenhaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtFuncionarios.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtFuncionarios.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeNull() {
                return this.IsNull(this.tabledtFuncionarios.NomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeNull() {
                this[this.tabledtFuncionarios.NomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSenhaNull() {
                return this.IsNull(this.tabledtFuncionarios.SenhaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSenhaNull() {
                this[this.tabledtFuncionarios.SenhaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCredenciaisRow : global::System.Data.DataRow {
            
            private dtCredenciaisDataTable tabledtCredenciais;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCredenciaisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCredenciais = ((dtCredenciaisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Credencial {
                get {
                    try {
                        return ((string)(this[this.tabledtCredenciais.CredencialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credencial\' in table \'dtCredenciais\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCredenciais.CredencialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIS {
                get {
                    try {
                        return ((long)(this[this.tabledtCredenciais.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtCredenciais\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCredenciais.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Via {
                get {
                    try {
                        return ((short)(this[this.tabledtCredenciais.ViaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Via\' in table \'dtCredenciais\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCredenciais.ViaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredencialNull() {
                return this.IsNull(this.tabledtCredenciais.CredencialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredencialNull() {
                this[this.tabledtCredenciais.CredencialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtCredenciais.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtCredenciais.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViaNull() {
                return this.IsNull(this.tabledtCredenciais.ViaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViaNull() {
                this[this.tabledtCredenciais.ViaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtTemplatesRecebidoRow : global::System.Data.DataRow {
            
            private dtTemplatesRecebidoDataTable tabledtTemplatesRecebido;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtTemplatesRecebidoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtTemplatesRecebido = ((dtTemplatesRecebidoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIS {
                get {
                    try {
                        return ((long)(this[this.tabledtTemplatesRecebido.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtTemplatesRecebido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesRecebido.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Template {
                get {
                    try {
                        return ((string)(this[this.tabledtTemplatesRecebido.TemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Template\' in table \'dtTemplatesRecebido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesRecebido.TemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Dedo1 {
                get {
                    try {
                        return ((short)(this[this.tabledtTemplatesRecebido.Dedo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dedo1\' in table \'dtTemplatesRecebido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesRecebido.Dedo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Dedo2 {
                get {
                    try {
                        return ((short)(this[this.tabledtTemplatesRecebido.Dedo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dedo2\' in table \'dtTemplatesRecebido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesRecebido.Dedo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtTemplatesRecebido.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtTemplatesRecebido.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNull() {
                return this.IsNull(this.tabledtTemplatesRecebido.TemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNull() {
                this[this.tabledtTemplatesRecebido.TemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDedo1Null() {
                return this.IsNull(this.tabledtTemplatesRecebido.Dedo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDedo1Null() {
                this[this.tabledtTemplatesRecebido.Dedo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDedo2Null() {
                return this.IsNull(this.tabledtTemplatesRecebido.Dedo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDedo2Null() {
                this[this.tabledtTemplatesRecebido.Dedo2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSupervisoresRow : global::System.Data.DataRow {
            
            private dtSupervisoresDataTable tabledtSupervisores;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSupervisoresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSupervisores = ((dtSupervisoresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong PIS {
                get {
                    try {
                        return ((ulong)(this[this.tabledtSupervisores.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Credencial {
                get {
                    try {
                        return ((string)(this[this.tabledtSupervisores.CredencialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credencial\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.CredencialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Senha {
                get {
                    try {
                        return ((string)(this[this.tabledtSupervisores.SenhaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Senha\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.SenhaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ProgramacoesTecnicas {
                get {
                    try {
                        return ((bool)(this[this.tabledtSupervisores.ProgramacoesTecnicasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramacoesTecnicas\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.ProgramacoesTecnicasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AlteraDataHora {
                get {
                    try {
                        return ((bool)(this[this.tabledtSupervisores.AlteraDataHoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlteraDataHora\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.AlteraDataHoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ProgramaPenDrive {
                get {
                    try {
                        return ((bool)(this[this.tabledtSupervisores.ProgramaPenDriveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramaPenDrive\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.ProgramaPenDriveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AlteracaoBobina {
                get {
                    try {
                        return ((bool)(this[this.tabledtSupervisores.AlteracaoBobinaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlteracaoBobina\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.AlteracaoBobinaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPF {
                get {
                    try {
                        return ((long)(this[this.tabledtSupervisores.CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPF\' in table \'dtSupervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSupervisores.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtSupervisores.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtSupervisores.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredencialNull() {
                return this.IsNull(this.tabledtSupervisores.CredencialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredencialNull() {
                this[this.tabledtSupervisores.CredencialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSenhaNull() {
                return this.IsNull(this.tabledtSupervisores.SenhaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSenhaNull() {
                this[this.tabledtSupervisores.SenhaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramacoesTecnicasNull() {
                return this.IsNull(this.tabledtSupervisores.ProgramacoesTecnicasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramacoesTecnicasNull() {
                this[this.tabledtSupervisores.ProgramacoesTecnicasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlteraDataHoraNull() {
                return this.IsNull(this.tabledtSupervisores.AlteraDataHoraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlteraDataHoraNull() {
                this[this.tabledtSupervisores.AlteraDataHoraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramaPenDriveNull() {
                return this.IsNull(this.tabledtSupervisores.ProgramaPenDriveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramaPenDriveNull() {
                this[this.tabledtSupervisores.ProgramaPenDriveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlteracaoBobinaNull() {
                return this.IsNull(this.tabledtSupervisores.AlteracaoBobinaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlteracaoBobinaNull() {
                this[this.tabledtSupervisores.AlteracaoBobinaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPFNull() {
                return this.IsNull(this.tabledtSupervisores.CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPFNull() {
                this[this.tabledtSupervisores.CPFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMRPAlteracaoEmpregadorRow : global::System.Data.DataRow {
            
            private dtMRPAlteracaoEmpregadorDataTable tabledtMRPAlteracaoEmpregador;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPAlteracaoEmpregadorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMRPAlteracaoEmpregador = ((dtMRPAlteracaoEmpregadorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NSR {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPAlteracaoEmpregador.NSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSR\' in table \'dtMRPAlteracaoEmpregador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.NSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataHoraGravacao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMRPAlteracaoEmpregador.DataHoraGravacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraGravacao\' in table \'dtMRPAlteracaoEmpregador\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.DataHoraGravacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNPJ_CPF {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPAlteracaoEmpregador.CNPJ_CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNPJ_CPF\' in table \'dtMRPAlteracaoEmpregador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.CNPJ_CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEI {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPAlteracaoEmpregador.CEIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEI\' in table \'dtMRPAlteracaoEmpregador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.CEIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RazaoSocial {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPAlteracaoEmpregador.RazaoSocialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RazaoSocial\' in table \'dtMRPAlteracaoEmpregador\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.RazaoSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Endereco {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPAlteracaoEmpregador.EnderecoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Endereco\' in table \'dtMRPAlteracaoEmpregador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.EnderecoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPF {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPAlteracaoEmpregador.CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPF\' in table \'dtMRPAlteracaoEmpregador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPAlteracaoEmpregador.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSRNull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.NSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSRNull() {
                this[this.tabledtMRPAlteracaoEmpregador.NSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraGravacaoNull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.DataHoraGravacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraGravacaoNull() {
                this[this.tabledtMRPAlteracaoEmpregador.DataHoraGravacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNPJ_CPFNull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.CNPJ_CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNPJ_CPFNull() {
                this[this.tabledtMRPAlteracaoEmpregador.CNPJ_CPFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEINull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.CEIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEINull() {
                this[this.tabledtMRPAlteracaoEmpregador.CEIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRazaoSocialNull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.RazaoSocialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRazaoSocialNull() {
                this[this.tabledtMRPAlteracaoEmpregador.RazaoSocialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnderecoNull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.EnderecoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnderecoNull() {
                this[this.tabledtMRPAlteracaoEmpregador.EnderecoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPFNull() {
                return this.IsNull(this.tabledtMRPAlteracaoEmpregador.CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPFNull() {
                this[this.tabledtMRPAlteracaoEmpregador.CPFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMRPMarcacaoRow : global::System.Data.DataRow {
            
            private dtMRPMarcacaoDataTable tabledtMRPMarcacao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPMarcacaoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMRPMarcacao = ((dtMRPMarcacaoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NSR {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPMarcacao.NSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSR\' in table \'dtMRPMarcacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPMarcacao.NSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataHoraGravacao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMRPMarcacao.DataHoraGravacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraGravacao\' in table \'dtMRPMarcacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPMarcacao.DataHoraGravacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PIS {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPMarcacao.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtMRPMarcacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPMarcacao.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSRNull() {
                return this.IsNull(this.tabledtMRPMarcacao.NSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSRNull() {
                this[this.tabledtMRPMarcacao.NSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraGravacaoNull() {
                return this.IsNull(this.tabledtMRPMarcacao.DataHoraGravacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraGravacaoNull() {
                this[this.tabledtMRPMarcacao.DataHoraGravacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtMRPMarcacao.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtMRPMarcacao.PISColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMRPDataHoraRow : global::System.Data.DataRow {
            
            private dtMRPDataHoraDataTable tabledtMRPDataHora;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPDataHoraRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMRPDataHora = ((dtMRPDataHoraDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NSR {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPDataHora.NSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSR\' in table \'dtMRPDataHora\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPDataHora.NSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataHoraAnterior {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMRPDataHora.DataHoraAnteriorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraAnterior\' in table \'dtMRPDataHora\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPDataHora.DataHoraAnteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataHoraAtual {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMRPDataHora.DataHoraAtualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraAtual\' in table \'dtMRPDataHora\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPDataHora.DataHoraAtualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPF {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPDataHora.CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPF\' in table \'dtMRPDataHora\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPDataHora.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSRNull() {
                return this.IsNull(this.tabledtMRPDataHora.NSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSRNull() {
                this[this.tabledtMRPDataHora.NSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraAnteriorNull() {
                return this.IsNull(this.tabledtMRPDataHora.DataHoraAnteriorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraAnteriorNull() {
                this[this.tabledtMRPDataHora.DataHoraAnteriorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraAtualNull() {
                return this.IsNull(this.tabledtMRPDataHora.DataHoraAtualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraAtualNull() {
                this[this.tabledtMRPDataHora.DataHoraAtualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPFNull() {
                return this.IsNull(this.tabledtMRPDataHora.CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPFNull() {
                this[this.tabledtMRPDataHora.CPFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMRPEmpregadoRow : global::System.Data.DataRow {
            
            private dtMRPEmpregadoDataTable tabledtMRPEmpregado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPEmpregadoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMRPEmpregado = ((dtMRPEmpregadoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NSR {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEmpregado.NSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSR\' in table \'dtMRPEmpregado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEmpregado.NSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataHoraAlteracao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMRPEmpregado.DataHoraAlteracaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraAlteracao\' in table \'dtMRPEmpregado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEmpregado.DataHoraAlteracaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoAlteracao {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEmpregado.TipoAlteracaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoAlteracao\' in table \'dtMRPEmpregado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEmpregado.TipoAlteracaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PIS {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEmpregado.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtMRPEmpregado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEmpregado.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEmpregado.NomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nome\' in table \'dtMRPEmpregado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEmpregado.NomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPF {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEmpregado.CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPF\' in table \'dtMRPEmpregado\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEmpregado.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSRNull() {
                return this.IsNull(this.tabledtMRPEmpregado.NSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSRNull() {
                this[this.tabledtMRPEmpregado.NSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraAlteracaoNull() {
                return this.IsNull(this.tabledtMRPEmpregado.DataHoraAlteracaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraAlteracaoNull() {
                this[this.tabledtMRPEmpregado.DataHoraAlteracaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoAlteracaoNull() {
                return this.IsNull(this.tabledtMRPEmpregado.TipoAlteracaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoAlteracaoNull() {
                this[this.tabledtMRPEmpregado.TipoAlteracaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtMRPEmpregado.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtMRPEmpregado.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeNull() {
                return this.IsNull(this.tabledtMRPEmpregado.NomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeNull() {
                this[this.tabledtMRPEmpregado.NomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPFNull() {
                return this.IsNull(this.tabledtMRPEmpregado.CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPFNull() {
                this[this.tabledtMRPEmpregado.CPFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtStatusRow : global::System.Data.DataRow {
            
            private dtStatusDataTable tabledtStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtStatus = ((dtStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Propriedade {
                get {
                    try {
                        return ((string)(this[this.tabledtStatus.PropriedadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Propriedade\' in table \'dtStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtStatus.PropriedadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Valor {
                get {
                    try {
                        return ((string)(this[this.tabledtStatus.ValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valor\' in table \'dtStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtStatus.ValorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPropriedadeNull() {
                return this.IsNull(this.tabledtStatus.PropriedadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPropriedadeNull() {
                this[this.tabledtStatus.PropriedadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorNull() {
                return this.IsNull(this.tabledtStatus.ValorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorNull() {
                this[this.tabledtStatus.ValorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtTemplatesParaEnvioRow : global::System.Data.DataRow {
            
            private dtTemplatesParaEnvioDataTable tabledtTemplatesParaEnvio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtTemplatesParaEnvioRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtTemplatesParaEnvio = ((dtTemplatesParaEnvioDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIS {
                get {
                    try {
                        return ((long)(this[this.tabledtTemplatesParaEnvio.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtTemplatesParaEnvio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesParaEnvio.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Template {
                get {
                    try {
                        return ((string)(this[this.tabledtTemplatesParaEnvio.TemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Template\' in table \'dtTemplatesParaEnvio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesParaEnvio.TemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Dedo1 {
                get {
                    try {
                        return ((short)(this[this.tabledtTemplatesParaEnvio.Dedo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dedo1\' in table \'dtTemplatesParaEnvio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesParaEnvio.Dedo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Dedo2 {
                get {
                    try {
                        return ((short)(this[this.tabledtTemplatesParaEnvio.Dedo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dedo2\' in table \'dtTemplatesParaEnvio\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtTemplatesParaEnvio.Dedo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtTemplatesParaEnvio.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtTemplatesParaEnvio.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNull() {
                return this.IsNull(this.tabledtTemplatesParaEnvio.TemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNull() {
                this[this.tabledtTemplatesParaEnvio.TemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDedo1Null() {
                return this.IsNull(this.tabledtTemplatesParaEnvio.Dedo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDedo1Null() {
                this[this.tabledtTemplatesParaEnvio.Dedo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDedo2Null() {
                return this.IsNull(this.tabledtTemplatesParaEnvio.Dedo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDedo2Null() {
                this[this.tabledtTemplatesParaEnvio.Dedo2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtEventosRow : global::System.Data.DataRow {
            
            private dtEventosDataTable tabledtEventos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEventosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtEventos = ((dtEventosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataHoraEvento {
                get {
                    try {
                        return ((string)(this[this.tabledtEventos.DataHoraEventoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraEvento\' in table \'dtEventos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEventos.DataHoraEventoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Evento {
                get {
                    try {
                        return ((string)(this[this.tabledtEventos.EventoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Evento\' in table \'dtEventos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEventos.EventoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraEventoNull() {
                return this.IsNull(this.tabledtEventos.DataHoraEventoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraEventoNull() {
                this[this.tabledtEventos.DataHoraEventoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventoNull() {
                return this.IsNull(this.tabledtEventos.EventoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventoNull() {
                this[this.tabledtEventos.EventoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMRPEventosSensiveisRow : global::System.Data.DataRow {
            
            private dtMRPEventosSensiveisDataTable tabledtMRPEventosSensiveis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMRPEventosSensiveisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMRPEventosSensiveis = ((dtMRPEventosSensiveisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NSR {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEventosSensiveis.NSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSR\' in table \'dtMRPEventosSensiveis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEventosSensiveis.NSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataHoraEvento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMRPEventosSensiveis.DataHoraEventoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHoraEvento\' in table \'dtMRPEventosSensiveis\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtMRPEventosSensiveis.DataHoraEventoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoEvento {
                get {
                    try {
                        return ((string)(this[this.tabledtMRPEventosSensiveis.TipoEventoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoEvento\' in table \'dtMRPEventosSensiveis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMRPEventosSensiveis.TipoEventoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSRNull() {
                return this.IsNull(this.tabledtMRPEventosSensiveis.NSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSRNull() {
                this[this.tabledtMRPEventosSensiveis.NSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraEventoNull() {
                return this.IsNull(this.tabledtMRPEventosSensiveis.DataHoraEventoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraEventoNull() {
                this[this.tabledtMRPEventosSensiveis.DataHoraEventoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoEventoNull() {
                return this.IsNull(this.tabledtMRPEventosSensiveis.TipoEventoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoEventoNull() {
                this[this.tabledtMRPEventosSensiveis.TipoEventoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtFuncionariosCompletosRow : global::System.Data.DataRow {
            
            private dtFuncionariosCompletosDataTable tabledtFuncionariosCompletos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtFuncionariosCompletosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtFuncionariosCompletos = ((dtFuncionariosCompletosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIS {
                get {
                    try {
                        return ((long)(this[this.tabledtFuncionariosCompletos.PISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIS\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.PISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    try {
                        return ((string)(this[this.tabledtFuncionariosCompletos.NomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nome\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.NomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Senha {
                get {
                    try {
                        return ((int)(this[this.tabledtFuncionariosCompletos.SenhaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Senha\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.SenhaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Credencial {
                get {
                    try {
                        return ((string)(this[this.tabledtFuncionariosCompletos.CredencialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credencial\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.CredencialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Via {
                get {
                    try {
                        return ((short)(this[this.tabledtFuncionariosCompletos.ViaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Via\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.ViaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Template {
                get {
                    try {
                        return ((string)(this[this.tabledtFuncionariosCompletos.TemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Template\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.TemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Dedo1 {
                get {
                    try {
                        return ((short)(this[this.tabledtFuncionariosCompletos.Dedo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dedo1\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.Dedo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Dedo2 {
                get {
                    try {
                        return ((short)(this[this.tabledtFuncionariosCompletos.Dedo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dedo2\' in table \'dtFuncionariosCompletos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFuncionariosCompletos.Dedo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISNull() {
                return this.IsNull(this.tabledtFuncionariosCompletos.PISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISNull() {
                this[this.tabledtFuncionariosCompletos.PISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeNull() {
                return this.IsNull(this.tabledtFuncionariosCompletos.NomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeNull() {
                this[this.tabledtFuncionariosCompletos.NomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSenhaNull() {
                return this.IsNull(this.tabledtFuncionariosCompletos.SenhaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSenhaNull() {
                this[this.tabledtFuncionariosCompletos.SenhaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredencialNull() {
                return this.IsNull(this.tabledtFuncionariosCompletos.CredencialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredencialNull() {
                this[this.tabledtFuncionariosCompletos.CredencialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViaNull() {
                return this.IsNull(this.tabledtFuncionariosCompletos.ViaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViaNull() {
                this[this.tabledtFuncionariosCompletos.ViaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemplateNull() {
                return this.IsNull(this.tabledtFuncionariosCompletos.TemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemplateNull() {
                this[this.tabledtFuncionariosCompletos.TemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDedo1Null() {
                return this.IsNull(this.tabledtFuncionariosCompletos.Dedo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDedo1Null() {
                this[this.tabledtFuncionariosCompletos.Dedo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDedo2Null() {
                return this.IsNull(this.tabledtFuncionariosCompletos.Dedo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDedo2Null() {
                this[this.tabledtFuncionariosCompletos.Dedo2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtEventosSistemaRow : global::System.Data.DataRow {
            
            private dtEventosSistemaDataTable tabledtEventosSistema;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEventosSistemaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtEventosSistema = ((dtEventosSistemaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroSequencial {
                get {
                    try {
                        return ((string)(this[this.tabledtEventosSistema.NumeroSequencialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroSequencial\' in table \'dtEventosSistema\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEventosSistema.NumeroSequencialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tabledtEventosSistema.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipo\' in table \'dtEventosSistema\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEventosSistema.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataHora {
                get {
                    try {
                        return ((string)(this[this.tabledtEventosSistema.DataHoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataHora\' in table \'dtEventosSistema\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEventosSistema.DataHoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Detalhes {
                get {
                    try {
                        return ((string)(this[this.tabledtEventosSistema.DetalhesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detalhes\' in table \'dtEventosSistema\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEventosSistema.DetalhesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroSequencialNull() {
                return this.IsNull(this.tabledtEventosSistema.NumeroSequencialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroSequencialNull() {
                this[this.tabledtEventosSistema.NumeroSequencialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tabledtEventosSistema.TipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tabledtEventosSistema.TipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataHoraNull() {
                return this.IsNull(this.tabledtEventosSistema.DataHoraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataHoraNull() {
                this[this.tabledtEventosSistema.DataHoraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetalhesNull() {
                return this.IsNull(this.tabledtEventosSistema.DetalhesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetalhesNull() {
                this[this.tabledtEventosSistema.DetalhesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtHistoricoComandosRowChangeEvent : global::System.EventArgs {
            
            private dtHistoricoComandosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHistoricoComandosRowChangeEvent(dtHistoricoComandosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHistoricoComandosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMensagensDisplayRowChangeEvent : global::System.EventArgs {
            
            private dtMensagensDisplayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMensagensDisplayRowChangeEvent(dtMensagensDisplayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMensagensDisplayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtFuncionariosRowChangeEvent : global::System.EventArgs {
            
            private dtFuncionariosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosRowChangeEvent(dtFuncionariosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCredenciaisRowChangeEvent : global::System.EventArgs {
            
            private dtCredenciaisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCredenciaisRowChangeEvent(dtCredenciaisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCredenciaisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtTemplatesRecebidoRowChangeEvent : global::System.EventArgs {
            
            private dtTemplatesRecebidoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesRecebidoRowChangeEvent(dtTemplatesRecebidoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesRecebidoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSupervisoresRowChangeEvent : global::System.EventArgs {
            
            private dtSupervisoresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSupervisoresRowChangeEvent(dtSupervisoresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSupervisoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMRPAlteracaoEmpregadorRowChangeEvent : global::System.EventArgs {
            
            private dtMRPAlteracaoEmpregadorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPAlteracaoEmpregadorRowChangeEvent(dtMRPAlteracaoEmpregadorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPAlteracaoEmpregadorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMRPMarcacaoRowChangeEvent : global::System.EventArgs {
            
            private dtMRPMarcacaoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPMarcacaoRowChangeEvent(dtMRPMarcacaoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPMarcacaoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMRPDataHoraRowChangeEvent : global::System.EventArgs {
            
            private dtMRPDataHoraRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPDataHoraRowChangeEvent(dtMRPDataHoraRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPDataHoraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMRPEmpregadoRowChangeEvent : global::System.EventArgs {
            
            private dtMRPEmpregadoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEmpregadoRowChangeEvent(dtMRPEmpregadoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEmpregadoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtStatusRowChangeEvent : global::System.EventArgs {
            
            private dtStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtStatusRowChangeEvent(dtStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtTemplatesParaEnvioRowChangeEvent : global::System.EventArgs {
            
            private dtTemplatesParaEnvioRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesParaEnvioRowChangeEvent(dtTemplatesParaEnvioRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtTemplatesParaEnvioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtEventosRowChangeEvent : global::System.EventArgs {
            
            private dtEventosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosRowChangeEvent(dtEventosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMRPEventosSensiveisRowChangeEvent : global::System.EventArgs {
            
            private dtMRPEventosSensiveisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEventosSensiveisRowChangeEvent(dtMRPEventosSensiveisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMRPEventosSensiveisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtFuncionariosCompletosRowChangeEvent : global::System.EventArgs {
            
            private dtFuncionariosCompletosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosCompletosRowChangeEvent(dtFuncionariosCompletosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFuncionariosCompletosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtEventosSistemaRowChangeEvent : global::System.EventArgs {
            
            private dtEventosSistemaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosSistemaRowChangeEvent(dtEventosSistemaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEventosSistemaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591